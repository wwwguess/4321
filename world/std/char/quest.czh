// original from es2
// change by thir in zh

#include <dbase.h>
#include <ansi.h>
#include <globals.h> 

// npc will carry too many object if allow keep obj,see give.c
int no_keep(object ob) {
	return(1);
}
// test whether player belongs to the same faimily. the default check fun
int valid_quest(object who) {
	object master=this_object();
//	if( who->is_apprentice_of(master) ) {
        if( master->query("family/family_name") == who->query("family/family_name")) {
		return(1);
	}
	else  {
		tell_object(who,master->query("name")+ "说道：你不是我的弟子，还是找你自己的师傅去吧！\n" NOR);	
		return(0);
	}
}

// quest file in /class/classname/quest/
string quest_file(string tag) {
	string file;
/*
        file = (CLASS_D(this_object()->query("class"))+"/quest/qlist"+tag);
*/
	file = ("/quest/qlist"+tag);	
//        printf("quest:%s\n",file);
	return file;	
}


void give_bonus(object who,mapping quest);
int quest_punish(object who);

int time_period(int timep, object me);
string sysmsg;

int give_quest(string arg)
{
        mapping quest ;
        object me;
        int fft=2, j, combatexp, timep, r_kar;
        string tag = "1000000";
	int shen = this_object()->query("shen_type");
	int target_shen;
	
 string *levels = ({
                        "0",
			"1625",
			"3125",
			"6250",
			"12500",
			"25000",
			"50000",
			"100000",
			"200000",
			"400000",
			"800000",
			"1600000",
			"3200000",
			"6400000",
			"12500000",
			"25000000",
        });
        if( !arg ) fft=2;
        if( arg == "-h") fft=4;
        if( arg == "-hh" ) fft =8;
        if( arg == "-hhh" ) fft = 16;
        if( arg == "-hhhh" ) fft = 32;
        if( arg == "-x" ) fft = 500;
        if( arg == "-xx" ) fft = 1000; 
        if( arg == "-xxx" ) fft = 2000;
        if( arg == "-l" ) fft = 1;
        me = this_player();
// Let's see if this player is a ghost
        if((int) me->is_ghost())
        {
                write("鬼魂不可要任务．\n");
                return 1;
        }
// Let's see if this player is apprentice of me
//	if( ! me->is_apprentice_of(this_object()) ) {
	if( ! valid_quest(me) ) {
		return(1);
	} 
// Let's see if this player still carries an un-expired task
        if((quest =  me->query("quest")))
        {
          if( ((int) me->query("task_time")) >  time() ){
		tell_object(me,this_object()->query("name")+ "说道：上次交给你的任务怎么样了？\n" NOR);
		return(1);
          }
          else
	   {
//	if failed once then reset quest_ok 
	     me->set("quest_ok",0);
             quest_punish(me);
	    }
        }
        combatexp = (int) me->query("combat_exp");
// player can get harder or easier quests;
        combatexp = combatexp * fft / 2;
        r_kar = random((int) me->query("kar"));
        for(j= sizeof(levels) - 1 ; j>=0; j--)
        {
                if( atoi(levels[j])  <= combatexp )
                        {
                                tag = levels[j];
                                if ( r_kar > 15 && j > 0) tag = levels[j-1];
                                if ( r_kar < 3 && j < (sizeof(levels) -1)) tag = levels[j+1];
                                break;
                        }
        }
//        if(!random(10)) tag = "_common";
//       if(!random(10)) tag = "_new";
//        quest = (CLASS_D(this_object()->query("class")+"/quest/qlist"+tag))->query_quest();

// 	depend the target's shen master may abort and reselect
	if ( shen < 0 ) shen = -1;
	else		shen = 1;
	for( j=0;j<5;j++) {
		quest = (quest_file(tag))->query_quest(); 
		target_shen = quest["shen_type"];
		// if the same shen type then 	
		if (( target_shen>=0 && shen==1)||( target_shen<0 && shen== -1))
		{
		  if(quest["quest_type"]=="杀") {
			quest["quest_type"]="胜";
			break;
		    }
		  else 
			continue;
		}
		// if diff  shen then break;
	        break;    
	}	
// check if find a proper task
	if ( j == 5) {

		tell_object(me,this_object()->query("name")+ "摇了摇头说：现在没有任务，好好练功吧！\n" NOR);
		return 1;
	}

//        timep = quest["time"];
// A factor here to make time random
//   always 12 min  
	timep= 720;
        timep = random(timep /2)+ timep/2 + 1;
        time_period(timep, me);
        if (quest["quest_type"] == "寻")
        {
        tell_object(me,"找回『"+quest["quest"]+"』给我。\n" NOR);
        sysmsg +="找回『"+quest["quest"]+"』。";
        }
                if (quest["quest_type"] == "杀")
        {
        tell_object(me,"替我杀了『"+quest["quest"]+"』。\n" NOR);
        sysmsg +="杀了『"+quest["quest"]+"』。";
        }
                if (quest["quest_type"] == "胜")
        {
        tell_object(me,"战胜『"+quest["quest"]+"』。\n" NOR);
        sysmsg +="战胜『"+quest["quest"]+"』。";
        }
        me->set("quest", quest);
        me->set("task_time", (int) time()+(int) timep);
	me->set("over_time",(int)0);
        CHANNEL_D->do_channel(this_object(), "qst", sprintf("%s(%s)：%s", 
        me->query("name"),me->query("id"),sysmsg));

return 1;
}

int time_period(int timep, object me)
{
        int t, d, h, m, s;
        string time;
	string accepter= this_object()->query("name");
        t = timep;
        s = t % 60;             t /= 60;
        m = t % 60;             t /= 60;
        h = t % 24;             t /= 24;
        d = t;

        if(d) time = chinese_number(d) + "天";
        else time = "";

        if(h) time += chinese_number(h) + "小时";
        if(m) time += chinese_number(m) + "分";
        time += chinese_number(s) + "秒";

        tell_object(me,HIW "『嗯 ....』，"+accepter + "沉思了一会儿，说道：\n请在" + time + "内");
        sysmsg = "在" + time + "内";
        return 1;
}

int quest_punish(object who) {
            message_vision( (this_object())->query("name")+"向$N一甩袍袖，说道：
真没用！不过看在你还回来见我的份上，就在给你一次机会．\n", who);
                who->set("kee", who->query("kee")/2+1);
		who->set("quest",0);
	    return(1);

}

int valid_bribe(object who , int val) {

     if( val < (33 - random((int)who->query("kar"))) * 500) {
       		tell_object(who,this_object()->query("name")+"在你耳边悄悄说道：这．．这太少了点儿吧．．\n");
		return(0);
	}
     else 
	return 1;

}

int accept_object(object who, object ob)
{
        int bonus, exp, pot, score,val; 
        string test;
        mapping quest;
	string accepter= this_object()->query("name");
// check whether quest is from the same class
if( this_object()->query("family/family_name") != who->query("family/family_name")) 
	return 0;
	printf("1");
        val = ob->value();
        if (val)
        {
		if(!valid_bribe(who,val)) 
			return 0;
                else
                {
			   who->set("quest_ok",0);
                       who->set("quest", 0 );
                tell_object(who,accepter+"说道：好吧，这个任务就算了吧．．\n");

                }
                return 1;
        }
        if(!(quest =  who->query("quest")))
        {
        tell_object(who,accepter+"说道：这不是我想要的。\n");
        return 0;
        }
        if( (string)ob->query("name") != quest["quest"])
        {
        tell_object(who,accepter+"说道：这不是我想要的。\n");
        return 0;
        }
	        if( userp(ob) ) {
                tell_object(who,accepter+"说道：你想蒙混过关吗!\n");
                return 0;
        }    
        if( ob->query("npc")==1 ) {
                tell_object(who,accepter+"说道：你想蒙混过关吗!\n");
                return 0;
        }

        if ((int) who->query("task_time") < time() )
        {
        tell_object(who,accepter+"说道：真可惜！你没有在指定的时间内完成！\n");
                        return 1;
        }
        else {
        	tell_object(who,accepter+"告诉你：恭喜你！你又完成了一项任务！\n");
		give_bonus(who,quest);
	}

                return 1;
}

void give_bonus(object who,mapping quest)
{
        int bonus, exp, pot, score, val;
	int quest_ok_time;

        exp = quest["exp_bonus"]/2 + random(quest["exp_bonus"]/2)+1;
// ADDED by PAFF 
        exp = exp * 2;
        quest_ok_time = who->query("quest_ok");
	if(quest_ok_time >0 && quest_ok_time <=5 ) {
		exp = exp * quest_ok_time;
	}
	pot = exp / 5 + 1;
		
//        pot = quest["pot_bonus"]/4 + random(quest["pot_bonus"]/4)+1;
//      due to weekly quest, each quest worth 20
//      score = quest["score"]/2 + random(quest["score"]/2);
//	destruct(ob);
        score = 20;
        bonus = (int) who->query("combat_exp");
        bonus += exp;
        who->set("combat_exp", bonus);
        bonus = (int) who->query("potential");
        bonus = bonus - (int) who->query("learned_points");
        bonus = bonus + pot;
        if( bonus > 300) bonus = 300;
        bonus += (int) who->query("learned_points");
        who->set("potential", bonus );
        bonus = (int) who->query("score");
        bonus += score;
        who->set("score", bonus);
        tell_object(who,HIW"你被奖励了：\n" +
       		 chinese_number(exp) + "点实战经验\n"+
       		 chinese_number(pot) + "点潜能\n" +
       		 NOR);
//        chinese_number(score)+"点综合评价\n"NOR);
	if(who->query("quest_ok") < 5) {
		who->add("quest_ok",1);
	}
        who->set("quest", 0 );
                        return ;
}

